
---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      security_group: linux-server-open 
      image: ami-3ecc8f46 
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:
      - name: Create Linux Server Restricted Security Group
        local_action: 
          module: ec2_group
          name: linux-server-restricted
          description: Linux Server Restricted Security Group
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip:
                 - 192.168.0.0/16
                 - 10.0.0.0/8
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      - name: Create Linux Server Open Security Group
        local_action: 
          module: ec2_group
          name: linux-server-open
          description: Linux Server Open Security Group
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      - name: Launch ec2 Instance
        local_action: ec2 
           group={{ security_group }} 
           instance_type={{ instance_type}} 
           image={{ image }} 
           wait=true 
           region={{ region }} 
           keypair={{ keypair }}
           count={{count}}
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
           dest="./hosts" 
           regexp={{ item.public_ip }} 
           insertafter="[linuxchallenge]" line={{ item.public_ip }}
        with_items: "{{ec2.instances}}"

      - name: Wait for SSH to come up
        local_action: wait_for 
           host={{ item.public_ip }} 
           port=22 
           state=started
        with_items: "{{ec2.instances}}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ec2.instances}}"
        args:
          tags:
            Name: linux
