---
name: test_flag
category: Misc
value: 5
description: "The flag is acsc18{TestFlag}"
flag: acsc18{TestFlag}
hints:
  - id: 1
    hint: If you really had to buy this hint, you don't need the points
    cost: 5
---
name: chat_with_me
category: Misc
value: 5
description: "Just visit the ACSC Slack chat to get the flag (and then hang around afterwards for announcements and other information).  Link is below"
links:  "https://join.slack.com/t/acsc18/shared_invite/enQtNDM0Mzg1NTQ2ODIwLWY3ZmY3YWZjMGNhOTExMWRjOWFlNTQ4YjhjZjk5NTQwYTVlN2M5YTgxN2EyY2YwMzc0MDNlNDdhZTAyMjFmYzU"
flag: acsc18{DontSlackOff}
hints:
  - id: 1
    hint: Join the Slack server
    cost: 0
---
name: hints
category: Misc
value: 5
description: Purchase each hint to get the flag (don't worry, you won't actually lose any points for this hint)
flag: acsc18{UseHintsWisely}
hints:
  - id: 1
    hint: Combine the next to hints together for the flag
    cost: 0
  - id: 2
    hint: acsc18{Use
    cost: 0
  - id: 3
    hint: HintsWisely}
    cost: 0
---
name: Anchovy_Dressing
category: Cryptography
value: ##
description: 57n7w3{dkm9a9m6gp97c99n98m9nndib}
flag: acsc18{Ipreferbluecheesedressing}
hints:
  - id: 1
    hint: This is one of the most basic forms of encryption
    cost: ##
  - id: 2
    hint: Notice that numbers are encrypted too
    cost: ##
---
name: Crypto 1
category: Cryptography
value: ##
description: |
  Not a lot to say....find the flag

  0x610x630x730x630x310x380x7b0x540x680x69 115077101115115097103101073115 01001001011011100100100001100101011110000100010001100101011000110100001001101001 bkFuZEJhc2V9
flag: acsc18{ThisMessageIsInHexDecBinAndBase}
hints:
  - id: 1
    hint: This isn't actually encrypted
    cost: ##
  - id: 2
    hint: There's four types of encoding here
    cost: ##
  - id: 3
    hint: You have Hex, Decimal, Binary, and Base64 text to combine
    cost: ##
---
name: DLLicious
category: Reverse Engineering
value: 80
description: "You found a suspicious looking dll on your machine. Can you figure out what its doing?

File can be found at the link below"
links: "https://challenge.acsc18.com/files/DLLicious/acsc.dll"
flag: acsc18{dont you love windows}
hints:
  - id: 1
    hint: Look at dll documentation on MSDN (https://docs.microsoft.com/en-us/cpp/build/dlls-in-visual-cpp?view=vs-2017)
    cost: 20
  - id: 2
    hint: Look at the dll export table using a tool. (dump bin, ida, dependency walker)
    cost: 30
---
name: Motivate_Me
category: Cryptography
value: ##
description: "We found a set of great motivational quotes and decided to encrypt each of them using the flag.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/Motivate_Me/WordsToLiveBy.txt"
flag: acsc18{TheyAreOneTimeForAReason}
hints:
  - id: 1
    hint: The flag follows the standard format so the first 7 characters of each line should be pretty easy
    cost: ##
  - id: 2
    hint: A simple XOR is used to encrypt each line
    cost: ##
  - id: 3
    hint: Fortunately with English text it's pretty easy to guess the next letter
    cost: ##
---
name: SANs
category: Forensics
value: ##
description: "Pretty sure there's more information to this report then meets the eye.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/SANs/2018%20SANS%20Security%20Awareness%20Report.pdf"
flag: acsc18{TalkAboutLayersOfSecurity}
hints:
  - id: 1
    hint: A pdf file is made up of many parts, there's a unique part in this one when you look
    cost: ##
  - id: 2
    hint: You can embed a file within an image file pretty easily
    cost: ##
  - id: 3
    hint: Just convert it
    cost: ##
---
name: aol
category: Web Exploitation
value: ##
description: "Remember when AOL used the be all the rage? For some reason AOL still thinks it is. So they have released a pretty cool feature, but the system will only allow their own browser to access it. Do you still have one of their free disks?

(NOTE: Please don't actually install this crap on your system)"
flag: acsc18{DisableCallWaiting}
hints:
  - id: 1
    hint: Browsers tell the servers alot about themselves. Can you manipulate that?
    cost: ##
  - id: 2
    hint: User-agent strings can be manipulated pretty easily
    cost: ##
---
name: ascii_art
category: Misc
value: ##
description: "No real trick here...

!!!!!!!Flag starts here !!!!!!! ____ ____ _____ ____ ____ _____ _____ _____ ______ _____ ________ ____ ______ ________ ______ ( ) / ) / \ / ) / / / _ \ / ( / _ \ ( _ \ ( ) ( ) ( ) ( __ \ ( ) ) \ / /\ \ / / ( ( / / / /) ) ( () ) ) ) ( () ) ) () ) | | ) ) / /\ \ ) () ) ) ) ( ( ( () ) ( ( _ \ ( ( //( ( \ _ / / / \ _ / \ / | | ( ( ( () ) ( / ( ( \ \ ) ( ( ( ) ) ( ( ) ) / / \ \ \ \ / / \ \ / _ \ | | ) ) ) ( ) \ \ _ ) ) / / / /\ \ \ _ _/ / \ _ ( ( ( () ) ) )__ ( () ) ) () ) | | ( ( / /\ \ ( ( \ _)) ( ( ____( ( /( )\ _) // _) /\ _____/ (( _/ (/ /( /\ /( )\ )) _/ /\ )______) !!!!!!End of Flag!!!!!!!"
flag: acsc18{8BITART}
hints:
  - id: 1
    hint: Many ASCII art characters have a flat top
    cost: ##
  - id: 2
    hint: Each line is an equal length of characters
    cost: ##
  - id: 3
    hint: Break the lines at postion 147
    cost: ##
---
name: browser_version
category: Forensics
value: ##
description: "A shiny new privilege escalation browser exploit was passed on to you and your team. You are so excited, you can hardly contain yourself and with that, want to let 'er rip as soon as possible. You've been working on escalate your privleges for a while and it seems the time has come! As you begin to prep your launcher, you decide to verify the browser platform version on the target one more time. Submit the browser version.

NOTE: Be sure to submit the flag in the correct format ( acsc18{flag} )

File can be found at the link below"
links: "https://challenge.acsc18.com/files/browser_version/Firefox.zip"
flag: acsc18{58.0}
hints:
  - id: 1
    hint: If I was Firefox, where would I keep this data?
    cost: ##
  - id: 2
    hint: Maybe you can loop through each file looking for a keyword or two.
    cost: ##
---
name: compiler_voodoo1
category: Reverse Engineering
value: ##
description: "Get the password and submit it for points.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/compiler_voodoo1/voodoo1"
flag: acsc18{llvm_is_better_than_gcc}
---
name: compiler_voodoo2
category: Reverse Engineering
value: ##
description: "Get the password and submit it for points.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/compiler_voodoo2/voodoo2"
flag: acsc18{one_inst_allowed_per_bb}
---
name: crackme-1
category: Reverse Engineering
value: ##
description: "How good are you at picking locks? Try your luck here.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/crackme-1/crackme-1"
flag: acsc18{wonphpwvyxnyekmq}
hints:
  - id: 1
    hint: Can you figure out what this program is doing without looking at its source code?
    cost: ##
  - id: 2
    hint: Use a dissambler or a debugger to make sense of the machine code.
    cost: ##
  - id: 3
    hint: Locate the decode function and figure out what it does with your inputs.
    cost: ##
---
name: crypto-2
category: Cryptography
value: ##
description: "Can you crack the cipher? It looks like the server is using RSA to encrypt secrets.

challenge.acsc18.com:5001"
links: "https://challenge.acsc18.com/files/crypto-2/server.py"
flag: acsc18{what_does_gcd_stand_for_again?}
hints:
  - id: 1
    hint: These number are too big to factor... What else can you do?
    cost: ##
  - id: 2
    hint: Is calculating the GCD of two numbers easier than factoring one?
    cost: ##
---
name: dsp-2
category: Misc
value: ##
description: "https://imgs.xkcd.com/comics/fourier.jpg

To read the file into python:
```python
f = open('dsp_2.iq', 'rb')

# read the IQ data from the file as np.complex
rx_signal = scipy.fromfile(f, dtype=np.complex)

f.close()
```"
links: "https://challenge.acsc18.com/files/dsp-2/dsp_2.iq"
flag: acsc18{pwn_the_rfz}
hints:
  - id: 1
    hint: This is an OFDM burst
    cost: ##
  - id: 2
    hint: Autocorrelation is your friend
    cost: ##
  - id: 3
    hint: The FFT size is 128
    cost: ##
  - id: 4
    hint: There are 16 guard subcarriers, no DC subcarrier
    cost: ##
  - id: 5
    hint: The subcarriers are QPSK modulated
    cost: ##
---
name: decoder
category: Scripting
value: 60
description: "Encryption is hard, encoding is easy, but not very secure. So let's just encode A LOT of times! Don't worry, we even told you what encoding method we used on each pass (encoding...).

1.  base64 = base64 encoded string
2.  base32 = base32 encoded string
3.  reverse = reverse the order of the string (abc -> cba)
4.  CaseInvert = swap the capitalization of the strig (AbC -> aBc)
5.  rot13 = encode the string with 'rot_13'"

flag: acsc18{ItsOnlySlightlyScrambled}
hints:
  - id: 1
    hint: Seperate the identified encoding method from the encoded string
    cost: 10
  - id: 2
    hint: Keep looping until you don't recoginize the encoding method given (hint....it's the flag!)
    cost: 40
---
name: exposed_server
category: Web Exploit
value: ##
description: Just another exposed web server. You can find the flag in /etc/flag.txt. NOTE NO TOOLS ARE REQUIRED FOR THIS CHALLENGE!
flag: acsc18{StillHaventPatched}
hints:
  - id: 1
    hint: Wordpress gets lots of extra functionality from the plug-ins a site might have installed
    cost: ##
  - id: 2
    hint: A number of websites track vulnerabilities associated with these plugins and other software
    cost: ##
  - id: 3
    hint: The site-editor plugin has a lot of power over Wordpress
    cost: ##
---
name: feeling_lucky
category: Reverse Engineering
value: ##
description: You found the source code to a slot machine, can you use your insider knowledge to win big?
flag: acsc18{JACKPOT!!}
hints:
  - id: 1
    hint: Check out the helper_pullHandle function
    cost: ##
  - id: 2
    hint: Look at the helper_getRandLetter function
    cost: ##
---
name: find_the_key
category: OSINT
value: ##
description: Enter the ip address of the server that is hosting the SSL certificate with the serial number 03:0a:d7:bc:48:8b:05:b9:4f:db:25:70:92:72:c3:98:11:20. Ensure you use to correct flag format acsc18{X.X.X.X}
flag: acsc18{166.62.37.150}
hints:
  - id: 1
    hint: There are a few services that continaully scan the Internet
    cost: ##
  - id: 2
    hint: For Shodan at least, you can't just search for the SSL serial number without specifiying a field
    cost: ##
---
name: force
category: Forensics
value: ##
description: "Yoda was wise but Luke managed to make it into more movies.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/force/Force.htm"
flag: acsc18{TheForceIsStrong}
hints:
  - id: 1
    hint: It's a pretty big file for such a small web page
    cost: ##
  - id: 2
    hint: Is it really a web page?
    cost: ##
  - id: 3
    hint: See what type of file it is, and try opening it with another program
    cost: ##
---
name: forgot_something
category: Forensics
value: ##
description: "The flag is right there, just open the image.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/forgot_something/forgot_something.jpg"
flag: acsc18{JustALittleShort}
hints:
  - id: 1
    hint: Most file types follow a specific format
    cost: ##
  - id: 2
    hint: What does the beginning of a jpg look like?
    cost: ##
---
name: ftp_capture
category: Forensics
value: ##
description: "Plaintext FTP transfer...what could be easier

File can be found at the link below"
links: "https://challenge.acsc18.com/files/ftp_capture/ftp.pcap"
flag: acsc18{AtLeastItsNotEncrypted}
hints:
  - id: 1
    hint: Rememeber FTP has a seperate data chanel
    cost: ##
  - id: 2
    hint: Is it possible to search for the header of a jpg file?
    cost: ##
  - id: 3
    hint: If only you could follow the entire file transfer and save it
    cost: ##
---
name: jollyroger
category: Reverse Engineering
value: ##
description: "It looks like this smart device provides an unauthenticated web portal to update the firmware. The developers say that they cryptographically sign their code so there's no need to authenticate, but I have a hunch it's not as secure as they think. Can you find a way to upload a modified firmware image?

challenge.acsc18.com:5003"
links: "https://challenge.acsc18.com/files/jollyroger/firmware"
flag: acsc18{i_thought_crcs_were_secure}
hints:
  - id: 1
    hint: The header is 32 bytes long, followed by an ELF file.
    cost: ##
  - id: 2
    hint: They're using a generic crc32 checksum to verify data integrity.
    cost: ##
  - id: 3
    hint: There is only one checksum, present in both the header and the body of the image.
    cost: ##
  - id: 4
    hint: The code segment of the ELF is being checksummed. It looks like some bytes of the code segment are being skipped.
    cost: ##
  - id: 5
    hint: The structure of the proprietary header is struct header { uint32_t magic; uint32_t version; uint32_t num_cksums; uint32_t c1_offset; uint32_t c1_cksum; uint8_t pad[12]; };
    cost: ##
---
name: leaky_crypto
category: Cryptography
value: ##
description: "We encrypted the flag with AES-ECB and a secret key and got the following:  b7695884638a2d5551c0a1ed35142c939a60791aba95dbaedd2994d677907602a0779b858857a3a3d04304fcde225ce7228993a1a0cd57ab37425fc7b32d4ca775053f0b39dccb6e9eb88ae40ec8aa9f

Unfortunately we lost the key. On the bright side though we did encrypt a bunch of other test flags with the same key before we lost it. Can you help us out?

File can be found at the link below"
links: "https://challenge.acsc18.com/files/leaky_crypto/codes.txt"
flag: acsc18{encryption_is_great_but_only_if_it_doesnt_leak_like_my_old_pipes}
hints:
  - id: 1
    hint: AES works on fixed size blocks
    cost: ##
  - id: 2
    hint: Blocks that are exactly the same produce the same encrypted output
    cost: ##
  - id: 3
    hint: Remember that there are two hex characters for each plaintext character
    cost: ##
---
name: lsb_stego
category: Forensics
value: 40
description: "Check out the content hosted at https://challenge.acsc18.com:5004"
flag: acsc18{98hcommunicationslocatorinterceptor}
hints:
  - id: 1
    hint: So you've checked the source for the web page and ran simple forensics tests on the content?
    cost: 5
  - id: 2
    hint: There's more than it seems to that paddle.
    cost: 10
  - id: 3
    hint: Stego
    cost: 15
---
name: man1
category: Linux
value: 35
description: Did you know man pages have their own markup language? Check out the man page for tee on this alpine linux docker.
flag: acsc18{just_when_you_thought_you_knew_what_it_does}
hints:
  - id: 1
    hint: What's the command to view the man page for a command?
    cost: 10
  - id: 2
    hint: man tee
    cost: 25
---
name: man2
category: Linux
value: 40
description: Do you know all the things the Strings library is capable of? Well, maybe not on all OS, but on this one.
flag: acsc18{man_strings_is_a_terrible_Google_image_search}
hints:
  - id: 1
    hint: Some markup languages hide comments from display when rendered.
    cost: 5
  - id: 2
    hint: Try to view the man source file
    cost: 15
  - id: 3
    hint: cat /usr/share/man/man0/strings.h.0p
    cost: 20
---
name: math_machine2
category: Scripting
value: ##
description: Think you're good at math? Answer 100 simple problems in 2 minutes and you'll get your flag.
flag: acsc18{SameScriptMinorChange}
hints:
  - id: 1
    hint: There is probably a way to automate this task and complete it a lot faster than you can
    cost: ##
  - id: 2
    hint: Try seperating the input recieved by each new line
    cost: ##
---
name: math_machine3
category: Scripting
value: ##
description: Same as last time, but just a little bit of a twist.
flag: acsc18{WordsMatter}
hints:
  - id: 1
    hint: There is probably a way to automate this task and complete it a lot faster than you can
    cost: ##
  - id: 2
    hint: Try seperating the input recieved by spaces
    cost: ##
  - id: 3
    hint: Break each word pair into is respective value to solve the problem
    cost: ##
---
name: obscure_security
category: Web Exploitation
value: ##
description: The server guy has recently upgrade the security on the web portal to ensure that no one can get the flag. Prove him wrong
flag: acsc18{ObscurityIsNotSecurity}
hints:
  - id: 1
    hint: What is the javascript function doing
    cost: ##
  - id: 2
    hint: Where do you get redirected to?
    cost: ##
---
name: osintfun
category: OSINT
value: 80
description: Access Sandy Mills-Mills' private sftp server and find the key.
flag: acsc18{90c17db65f1822eb2ecc9a087106de4a}
hints:
  - id: 1
    hint: Twitter
    cost: 20
  - id: 2
    hint: Username re-use?
    cost: 20
---
name: prize
category: Web Exploitation
value: ##
description: Business has been going great and we are rapidly approaching our 1 millionth visitor. If you happen to be that lucky person, we've got a great prize for you
flag: acsc18{WinnerWinnerChickenDinner}
hints:
  - id: 1
    hint: Cookies aren't just tasty, they are useful too
    cost: ##
  - id: 2
    hint: That second cookie doesn't look encrypted, maybe encoded?
    cost: ##
  - id: 3
    hint: Is that a hash in there too?
    cost: ##
---
name: shape_color
category: Forensics
value: 45
description: "You were given a file that is supposed to be a picture, however, you can open it and don't know why at the moment. Normally you would just move on to something else, however, you can't except defeat and are determined to get it open. Once you finally get it open, submit the flag as the color of the shape in the jpg.

NOTE: Be sure to submit the flag in the correct format ( acsc18{YourFlag} )

File can be found at the link below"
links: "https://challenge.acsc18.com/files/shape_color/shape_color.jpg"
flag: acsc18{orange}
hints:
  - id: 1
    hint: Maybe we need a hex editor.
    cost: 5
  - id: 2
    hint: I wonder if the file header information is correct?
    cost: 10
  - id: 3
    hint: Wait, you said this was a jpg, right? Maybe we should ensure the header is set for a jpg.
    cost: 15
---
name: stupid_stego
category: Forensics
value: ##
description: "I've got an important secret that I can't let anyone else see. I'll just hide it right here.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/stupid_stego/flag.jpg"
flag: acsc18{NotRealySteganography}
hints:
  - id: 1
    hint: The flag isn't encoded or encrytped or anything like that
    cost: ##
  - id: 2
    hint: Try looking behind the picture
    cost: ##
  - id: 3
    hint: The flag is just a long string
    cost: ##
---
name: stupid_stego2
category: Forensics
value: ##
description: "Well that didn't work out the way I thought it would at first. Lets try to hide it this way.

File can be found at the link below"
links: "https://challenge.acsc18.com/files/stupid_stego2/stupid_stego2.jpg"
flag: acsc18{HiddenInPlainSight}
hints:
  - id: 1
    hint: The flag isn't encoded or encrytped or anything like that
    cost: ##
  - id: 2
    hint: Try some simple color adjustments to the image
    cost: ##
  - id: 3
    hint: The "Threshold" function can do some pretty cool stuff
    cost: ##
---
name: survey1
category: Misc
value: 40
description: Connect to to the implant, survey your environment, and send me the flag.
flag: acsc18{webheader_owngoal}
hints:
  - id: 1
    hint: Look at your network interfaces and try to see if there are any other devices on the local network.
    cost: 5
  - id: 2
    hint: Try to connect to the other device like a browser.
    cost: 5
  - id: 3
    hint: Look at the header data.
    cost: 20
---
name: whats_going_on_here
category: Forensics
value: ##
description: "The network dudes are talking about one of our systems beaconing out somewhere. The system has been checked several times already with no evidence of weirdness going on but the beacons are still happening. You've decided to involve some outside help and they've asked for the registry hives of the system. Before shipping them off, you decide to take a gander since you hadn't looked at them. Find the beacons and submit one of the IPs as the flag.

NOTE: When you submit it, submit it in the correct format though ( acsc18{YourFlag} )

File can be found at the link below"
links: "https://challenge.acsc18.com/files/whats_going_on_here/suspect_registry.zip"
flag:
  acsc18{178.89.159.34}
  acsc18{178.89.159.37}
hints:
  - id: 1
    hint: Where is persistence usually within the Registry?
    cost: ##
  - id: 2
    hint: Wouldn't that be cool if there were tools that could help rip the Registry apart?
    cost: ##
  - id: 3
    hint: Obfuscation is like a onion, you know what I mean?
    cost: ##
---
name: where_am_i2
category: Forensics
value: ##
description: "Check out this fantastic new website that some company just bough. What city are they located in? NOTE: No you can't just search for the flag you cheaters. The flag is obvious when you find it, but is not currently in the correct format. When you submit it, submit it in the correct format though ( acsc18{YourFlag} )

File can be found at the link below"

links: "https://challenge.acsc18.com/files/where_am_i2/where_am_i2.pcap"
flag: acsc18{WalaWala}
hints:
  - id: 1
    hint: I imagine the address is on the contact page
    cost: ##
  - id: 2
    hint: What changes they browsed to the contact page?
    cost: ##
  - id: 3
    hint: What can tell you all about the encryption they are using? It also includes some location details.
    cost: ##
---
name: who_is_this_cat?
category: Forensics
value: ##
description: "Another section is in need of help looking for a potenitally rogue system and all they have is a MAC of 00:0c:29:61:c1:89. We informed them we may be able to assist them in finding the computername of the system tied to the MAC somewhere in our traffic captures but we can't make any promises.

NOTE: Be sure to submit the flag in the correct format ( acsc18{YourFlag} )

File can be found at the link below"
links: "https://challenge.acsc18.com/files/who_is_this_cat%3f/who.pcap"
flag: acsc18{ROCKETMAN-PC}
hints:
  - id: 1
    hint: Wireshark is a wonderful asset.
    cost: ##
  - id: 2
    hint: Maybe NetBIOS can help us.
    cost: ##
---
name: zippity_doo_dah
category: Forensics
value: ##
description: "You were given another zip file off of the hard drive we were analyzing. We also found a text file with it called 'password.txt' and the password was 'powershell'. When we unzipped the file with the password, there was another zip, and another zip. It seems that this file is zipped over and over again with this same password.

Submit the contents of the file at the root of all the zip files NOTE: Be sure to submit the flag in the correct format ( acsc18{YourFlag} )

File can be found at the link below"
links: "https://challenge.acsc18.com/files/zippity_doo_dah/Zippity.zip"
flag: acsc18{too_much_sauce}
hints:
  - id: 1
    hint: Only do it manually if you have months to spare
    cost: ##
  - id: 2
    hint: Maybe a "For" loop will help
    cost: ##
---
name: Linux1
category: Linux
value: 20
description: "Find the longest line (most characters) in linux1.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{ProvincialRadiationSickness}
hints:
  - id: 1
    hint: awk has a number of functions besides just printing out parts of a string
    cost: 10
  - id: 2
    hint: It's possible to sort numericly
    cost: 5
---
name: Linux2
category: Linux
value: 20
description: "How many characters are there in the 3rd column of words in linux2? (Ensure you submit the flag with the acsc18{<CharacterCount>}.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{71604}
hints:
  - id: 1
    hint: The cut command allows you to pull out a particular column
    cost: 7
  - id: 2
    hint: Word count can tell you a variety of statistics
    cost: 7
---
name: Linux3
category: Linux
value: 20
description: "What is the most common 12th chacter in the file linux3.  Case Matters! (Ensure you submit the flag with the acsc18{<Character>}.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{e}
hints:
  - id: 1
    hint: The cut command allows you to pull out a particular character
    cost: 7
  - id: 2
    hint: You may need to sort things
    cost: 3
  - id: 3
    hint: You can get the count of unique characters
    cost: 3
---
name: Linux4
category: Linux
value: 20
description: "What is the name of the file in the Linux4 folder with an md5 hash of 7ae8ef906919add4686419b22ea2e874.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{File350}
hints:
  - id: 1
    hint: md5sum can hash a file
    cost: 10
---
name: Linux5
category: Linux
value: 20
description: "Just find the flag in the folder Linux5.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{DontForgetHiddenFiles}
hints:
  - id: 1
    hint: I promise, it's in the folder
    cost: 15
---
name: Linux6
category: Linux
value: 30
description: "What version of yum is being used on the VM?  Note:  Ensure you use the acsc18{#.#.#-###} format.

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{3.4.3-158}
hints:
  - id: 1
    hint: Check the man file for yum
    cost: 15
---
name: Linux7
category: Linux
value: 20
description: "The flag is contained in a file somewhere on the system (Not in the users folder).

Logon to 52.33.202.4 with the username 'player' using the certificate in the link below"
links: "https://challenge.acsc18.com/files/linux/player.pem"
flag: acsc18{HopeYouUsedFind}
hints:
  - id: 1
    hint: You can specify that you are looking for a file with the find command
    cost: 10
  - id: 2
    hint: You can execute commands with find as well
    cost: 5
